#include <stdio.h>
#include <stdlib.h>
#include <time.h>
// Function to swap two elements
void swap(int* a, int* b) {
 int temp = *a;
 *a = *b;
 *b = temp;
}
// Function to partition the array
int partition(int arr[], int low, int high) {
 int pivot = arr[high];
 int i = low - 1;
 for (int j = low; j <= high - 1; j++) {
 if (arr[j] <= pivot) {
 i++;
 swap(&arr[i], &arr[j]);
 }
 }
 swap(&arr[i + 1], &arr[high]);
 return i + 1;
}
// Function to perform Quick Sort
void quickSort(int arr[], int low, int high) {
 if (low < high) {
 int pivotIndex = partition(arr, low, high);
 quickSort(arr, low, pivotIndex - 1);
 quickSort(arr, pivotIndex + 1, high);
 }
}
int main() {
 int n;
 printf("Enter the number of elements: ");
 scanf("%d", &n);
 // Generate random elements
 int arr[n];
 srand(time(0));
 for (int i = 0; i < n; i++) {
 arr[i] = rand() % 1000; // Random numbers between 0 and 99
 }
 // Print the unsorted array
 printf("Unsorted array:\n");
 for (int i = 0; i < n; i++) {
 printf("%d ", arr[i]);
 }
 printf("\n");
 // Calculate the time taken for sorting
 clock_t start = clock();
 quickSort(arr, 0, n - 1);
 clock_t end = clock();
 double time_taken = ((double)(end - start)) / CLOCKS_PER_SEC;
 printf("\nSorted elements:\n");
 for (int i = 0; i < n; i++) {
 printf("%d ", arr[i]);
 }
 printf("\n");
 printf("\nTime taken: %lf seconds\n", time_taken);
 return 0;
}
